# syntax = docker/dockerfile:1.4
FROM nvidia/cuda:12.2.0-devel-ubuntu20.04

# 1. Noninteractive and allow pip to override system packages
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC
ENV PIP_BREAK_SYSTEM_PACKAGES=1

WORKDIR /root

# 2. System & build deps
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      build-essential cmake ninja-build python3-dev \
      wget curl git python3 python3-venv python3-pip \
      nodejs && \
    rm -rf /var/lib/apt/lists/*

# 3. Upgrade pip so it can parse local-version tags
RUN pip3 install --no-cache-dir --upgrade pip

# 4. Expose CUDA
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=${CUDA_HOME}/bin:${PATH}
ENV LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
RUN nvcc --version

# 5. GPU PyTorch
RUN pip3 install --no-cache-dir \
      torch torchvision torchaudio \
      --extra-index-url https://download.pytorch.org/whl/cu122

# 6. New setuptools for PEP 621
# RUN pip3 install --no-cache-dir \
#       "setuptools>=67.6.0" wheel packaging

# 7. Build prerequisites
# RUN pip3 install --no-cache-dir cython numpy

# 8. Build FlashAttention
# RUN pip3 install --no-cache-dir flash-attn --no-build-isolation

# 9. Node.js & Yarn
ADD https://deb.nodesource.com/setup_23.x nodesource_setup.sh
RUN chmod +x nodesource_setup.sh && ./nodesource_setup.sh && \
    apt-get update && apt-get install -y --no-install-recommends nodejs && \
    npm install --global yarn && \
    rm -rf /var/lib/apt/lists/* nodesource_setup.sh

WORKDIR /root/modal-login
ENV YARN_CACHE_FOLDER=/root/.yarn
RUN yarn config set cache-folder $YARN_CACHE_FOLDER
COPY modal-login/package.json modal-login/package-lock.json ./
RUN --mount=type=cache,target=$YARN_CACHE_FOLDER yarn install

# 10. Cloudflared
ADD https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 \
    /usr/local/bin/cloudflared
RUN chmod +x /usr/local/bin/cloudflared

# 11. Copy code & make entrypoints executable
WORKDIR /root
COPY . .
RUN chmod +x entrypoint.sh run_rl_swarm.sh

ENTRYPOINT [ "/root/entrypoint.sh" ]
